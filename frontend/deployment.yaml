apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/appgw-ssl-certificate: "<certificate-name>"
    appgw.ingress.kubernetes.io/cookie-based-affinity: "true"
    appgw.ingress.kubernetes.io/connection-draining: "true"
    appgw.ingress.kubernetes.io/backend-service-hostname: "backend-service"
spec:
  rules:
   - host: backend-service
     http:
      paths:
      - path: /
        pathType: Prefix
        backend-service:
          service:
            name: frontend-service
            port: 
              number: 30090
      - path: /api/v1/workers
        pathType: Prefix
        backend-service:
          service:
            name: backend-service-service
            port: 
              number: 8085
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-app
spec:
  selector:
    matchLabels:
      app: backend-app
  replicas: 1
  template:
    metadata:
      name: backend-app
      labels:
        app: backend-app
    spec:
      containers:
      - name: backend-app
        image: aakashshinde09/angular-test:backendk8s
        imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  labels:
    app: backend-service
spec:
  ports:
  - port: 8085
  selector:
    app: backend-app
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2 
kind: Deployment 
metadata: 
  name: frontend-app 
spec: 
  selector: 
    matchLabels: 
      app: frontend-app 
  template:
    metadata: 
      labels: 
        app: frontend-app 
    spec: 
      containers: 
      - name: frontend-app 
        image: aakashshinde09/angular-test:frontendk8s-v4
        imagePullPolicy: Always
        ports: 
        - containerPort: 30080
--- 
kind: Service 
apiVersion: v1 
metadata: 
  name: frontend-service 
spec: 
  selector: 
    app: frontend-app
  ports: 
  - protocol: TCP 
    port: 30080 
    targetPort: 30080